<!doctype html>
<html class="no-js" lang="en">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="x-ua-compatible" content="ie=edge">
        <title>Console Cheat Sheet 1.0.0</title>
        <meta name="description" content="Console Cheat Sheet">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <link rel="apple-touch-icon" href="apple-icon-180x180.png">
        <link rel="apple-touch-icon" sizes="57x57" href="/apple-icon-57x57.png">
        <link rel="apple-touch-icon" sizes="60x60" href="/apple-icon-60x60.png">
        <link rel="apple-touch-icon" sizes="72x72" href="/apple-icon-72x72.png">
        <link rel="apple-touch-icon" sizes="76x76" href="/apple-icon-76x76.png">
        <link rel="apple-touch-icon" sizes="114x114" href="/apple-icon-114x114.png">
        <link rel="apple-touch-icon" sizes="120x120" href="/apple-icon-120x120.png">
        <link rel="apple-touch-icon" sizes="144x144" href="/apple-icon-144x144.png">
        <link rel="apple-touch-icon" sizes="152x152" href="/apple-icon-152x152.png">
        <link rel="apple-touch-icon" sizes="180x180" href="/apple-icon-180x180.png">
        <link rel="icon" type="image/png" sizes="192x192"  href="/android-icon-192x192.png">
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
        <link rel="manifest" href="/manifest.json">
        <meta name="msapplication-TileColor" content="#ffffff">
        <meta name="msapplication-TileImage" content="/ms-icon-144x144.png">
        <meta name="theme-color" content="#ffffff">

        <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css">
        <link rel="stylesheet" href="style.css">

        <script src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.min.js" type="text/javascript"></script>
    </head>
    <body>

        <header class="header">
            <div class="jsLogo">JS</div>
            <div class="title">
                CONSOLE<br>
                <small>CHEAT SHEET</small>
            </div>
            <div class="middle"></div>
            <div class="setSize">
                <input id="sizeSlider" type="range" min="5" max="20" step="1" value ="10" onchange="resizeArticle(this.value)">
            </div>
            <a href="https://github.com/nahody/consoleCheatSheet">
                <img style="position: absolute; top: -5px; right: -5px; border: 0;" src="https://camo.githubusercontent.com/a6677b08c955af8400f44c6298f40e7d19cc5b2d/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677261795f3664366436642e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png">
            </a>
        </header>
        <main class="grid">
            <article class="transparent grid-item">
               <table class="infoTable">
                   <thead>
                       <caption>Console methods overview</caption>
                       <tr>
                           <th>Methods</th>
                           <th>Description</th>
                       </tr>
                   </thead>
                   <tbody>
                       <tr>
                           <td>console.info()</td>
                           <td>Informative logging output with info icon in front.</td>
                       </tr>
                       <tr>
                           <td>console.log()</td>
                           <td>Output a Logging message without icon.</td>
                       </tr>
                       <tr>
                           <td>console.dir()</td>
                           <td>Displays an interactive listing of the properties of a specified JavaScript object. This listing lets you use disclosure triangles to examine the contents of child objects.</td>
                       </tr>
                       <tr>
                           <td>console.debug()</td>
                           <td>Alias for <code>console.log</code>.</td>
                       </tr>
                       <tr>
                           <td>console.warn()</td>
                           <td>Outputs a warning message with warn icon in front.</td>
                       </tr>
                       <tr>
                           <td>console.error()</td>
                           <td>Outputs an error message with error icon in front.</td>
                       </tr>
                       <tr>
                           <td>console.assert()</td>
                           <td>Log a message and stack trace to console if first argument is false</td>
                       </tr>
                       <tr>
                           <td>console.count()</td>
                           <td>Log the number of times this line has been called with the given label.</td>
                       </tr>
                       <tr>
                           <td class="group">console.group()</td>
                           <td>Creates a new inline group, indenting all following output by another level. To move back out a level, call groupEnd()</td>
                       </tr>
                       <tr>
                           <td class="group">console.groupCollapsed()</td>
                           <td>Creates a new inline group, indenting all following output by another level; unlike group(), this starts with the inline group collapsed, requiring the use of a disclosure button to expand it. To move back out a level, call groupEnd().</td>
                       </tr>
                       <tr>
                           <td class="group">console.groupEnd()</td>
                           <td>Exits the current inline group</td>
                       </tr>
                       <tr>
                           <td>console.clear()</td>
                           <td>Clear the console</td>
                       </tr>
                       <tr>
                           <td class="group">console.time()</td>
                           <td>Starts a timer with a name specified as an input parameter. Up to 10,000 simultaneous timers can run on a given page</td>
                       </tr>
                       <tr>
                           <td class="group">console.timeEnd()</td>
                           <td>Stops the specified timer and logs the elapsed time in seconds since its start.</td>
                       </tr>
                       <tr>
                           <td>console.table()</td>
                           <td>Clear the console</td>
                       </tr>
                   </tbody>
               </table>
            </article>

            <!-- console.info -->
            <article class="grid-item">
                <h2 class="monospace">console.info</h2>
                <p>Informative logging output with info icon in front.</p>
                <h3>Syntax</h3>
                <pre class="syntax">console.info(msg [, msg1, ..., msgN]);</pre>
                <h3>Example</h3>
                <pre>console.info('Mr. Dump is not', 2, 'smart');</pre>
                <div class="bar">
                    <button onclick="console.info('Mr. Dump is not', 2, 'smart');">Test in your browser</button>
                </div>
                <h3>Output</h3>
                <div class="output blue">
                    <i class="fa fa-info-circle blue" aria-hidden="true"></i> Mr. Dump is not <span class="blue">2</span> smart</div>
            </article>
            <!-- console.log -->
            <article>
                <h2 class="monospace">console.log</h2>
                <p>Output a Logging message without icon.</p>
                <h3>Syntax</h3>
                <pre class="syntax">console.log(msg [, msg1, ..., msgN]);</pre>
                <h3>Example</h3>
                <pre>console.log('Mr. Dump is not', 2, {property: 'smart'});</pre>
                <div class="bar">
                    <button onclick="console.log('Mr. Dump is not', 2, {property: 'smart'});">Test in your browser</button>
                </div>
                <h3>Output</h3>
                <div class="output">
                    Mr. Dump is not <span class="blue">2</span> <i class="fa fa-caret-right grey" aria-hidden="true"></i> Object {<span class="violet">property</span>: <span class="red">"<i>smart</i> "</span>}</div>
            </article>
            <!-- console.dir -->
            <article class="grid-item">
                <h2 class="monospace">console.dir</h2>
                <p>Displays an interactive list of the properties of the specified JavaScript object. The output is presented as a hierarchical listing with disclosure triangles that let you see the contents of child objects. <br>Best use for <code>console.dir</code> is for object contain DOM elements.
                    <ul>
                        <li><code>console.log</code> prints the element in an HTML-like tree</li>
                        <li><code>console.dir</code> prints the element in a JSON-like tree</li>
                    </ul>
                </p>
                <h3>Syntax</h3>
                <pre class="syntax">console.dir(object);</pre>
                <h3>Example</h3>
                <pre>console.dir({property: 'smart'});</pre>
                <div class="bar">
                    <button onclick="console.dir({property: 'smart'});">Test in your browser</button>
                </div>
                <h3>Output</h3>
                <div class="output">
                    <i class="fa fa-caret-right grey" aria-hidden="true"></i> Object</div>
            </article>
            <!-- console.warn -->
            <article class="grid-item">
                <h2 class="monospace">console.warn</h2>
                <p>Outputs a warning message with warn icon in front. Useful when informating the user on usage deprecated methods.</p>
                <h3>Syntax</h3>
                <pre class="syntax">console.warn(msg [, msg1, ..., msgN]);</pre>
                <h3>Example</h3>
                <pre>console.warn('Mr. Dump is not %d smart.', 2);</pre>
                <div class="bar">
                    <button onclick="console.warn('Mr. Dump is not %d smart.', 2);">Test in your browser</button>
                </div>
                <h3>Output</h3>
                <div class="output yellow">
                    <i class="fa fa-exclamation-triangle yellow" aria-hidden="true"></i> <i class="fa fa-caret-right grey" aria-hidden="true"></i> Mr. Dump is not <span class="blue">2</span> smart
                </div>
            </article>
            <!-- console.error -->
            <article class="grid-item">
                <h2 class="monospace">console.error</h2>
                <p>Outputs a warning message with warn icon in front. Useful when informating the user on usage deprecated methods.</p>
                <h3>Syntax</h3>
                <pre class="syntax">console.error(msg [, msg1, ..., msgN]);</pre>
                <h3>Example</h3>
                <pre>console.error('Mr. Dump is not %d smart.', 2);</pre>
                <div class="bar">
                    <button onclick="console.error('Mr. Dump is not %d smart.', 2);">Test in your browser</button>
                </div>
                <h3>Output</h3>
                <div class="output red">
                    <i class="fa fa-times-circle red" aria-hidden="true"></i> <i class="fa fa-caret-right grey" aria-hidden="true"></i> <span class="red">Mr. Dump is not 2 smart</span>
                </div>
            </article>
            <!-- console.assert -->
            <article class="grid-item">
                <h2 class="monospace">console.assert</h2>
                <p>Writes an error message to the console if the assertion is false. If the assertion is true, nothing happens.</p>
                <p class="note"><strong>Note:</strong> Specifically, in browsers, calling console.assert() with a falsy assertion will cause the message to be printed to the console without interrupting execution of subsequent code. In Node.js, however, a falsy assertion will cause an AssertionError to be thrown.</p>
                <h3>Syntax</h3>
                <pre class="syntax">console.assert(assertion, msg1 [, msg2, ..., msgN]);</pre>
                <h3>Example</h3>
                <pre>
function greaterThan(a,b) {
  console.assert(a > b, "a (%d) is not greater than b (%d)", a, b});
}
greaterThan(5,6);</pre>
                <div class="bar">
                    <button onclick="var  isValid = false; console.assert(isValid, 'Mr. Dump is not here.');">Test in your browser</button>
                </div>
                <h3>Output</h3>
                <div class="output red">
                    <i class="fa fa-times-circle red" aria-hidden="true"></i> <i class="fa fa-caret-right grey" aria-hidden="true"></i> <span class="red">a (5) is not greater than b (6)</span>
                </div>
            </article>
            <!-- console.table -->
            <article class="grid-item">
                <h2 class="monospace">console.table</h2>
                <p>This function takes one mandatory argument data, which must be an array or an object, and one additional optional parameter columns.</p>
                <p class="note">
                    <strong>Note</strong> that (in Firefox) console.table is limited to displaying 1000 rows (first row is the labeled index).
                </p>
                <p class="note">
                    <strong>Note</strong> that in Google Chrome console.table require data with 2 dimensions. The first represent always the index.
                </p>
                <h3>Syntax</h3>
                <pre class="syntax">console.table(data [, [column1, ..., columnN] ]);</pre>
                <h3>Example 1</h3>
                <pre>
// array of strings
console.table([ ["apples", "oranges", "bananas"] ]);</pre>
                <div class="bar">
                    <button onclick="console.table([['apples', 'oranges', 'bananas']]);">Test in your browser</button>
                </div>
                <h3>Output</h3>
                <div class="output table">
                    <table>
                        <thead>
                            <tr>
                                <th>(index)</th>
                                <th>0</th>
                                <th>1</th>
                                <th>2</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>0</td>
                                <td class="red">"apples"</td>
                                <td class="red">"oranges"</td>
                                <td class="red">"bananas"</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h3>Example 2</h3>
                <pre>
function Person(firstName, lastName, age) {
    this.firstName = firstName;
    this.lastName = lastName;
    this.age = age;
}

var family = {};
family.mother = new Person("Susan", "Doyle", 32);
family.father = new Person("John", "Doyle", 33);
family.daughter = new Person("Lily", "Doyle", 5);
family.son = new Person("Mike", "Doyle", 8);

console.table(family, ["firstName", "age"]);</pre>
                <div class="bar">
                    <button onclick="tableMethod();">Test in your browser</button>
                </div>
                <h3>Output</h3>
                <div class="output table">
                    <table>
                        <thead>
                            <tr>
                                <th>(index)</th>
                                <th>firstName</th>
                                <th>age</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>mother</td>
                                <td class="red">"Lea"</td>
                                <td class="blue">32</td>
                            </tr>
                            <tr>
                                <td>father</td>
                                <td class="red">"Jan"</td>
                                <td class="blue">33</td>
                            </tr>
                            <tr>
                                <td>daughter</td>
                                <td class="red">"Julia"</td>
                                <td class="blue">6</td>
                            </tr>
                            <tr>
                                <td>son</td>
                                <td class="red">"Nicolas"</td>
                                <td class="blue">15</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </article>
            <!-- console.clear -->
            <article class="grid-item">
                <h2 class="monospace">console.clear</h2>
                <p>Clears the console. <br>If in Chrome the <strong>Preserve log</strong> checkbox is enabled, <code>console.clear()</code> is disabled.</p>
                <h3>Syntax</h3>
                <pre class="syntax">console.clear();</pre>
            </article>
            <!-- console.count -->
            <article class="grid-item">
                <h2 class="monospace">console.count</h2>
                <p>Writes the number of times that count() has been invoked at the same line and with the same label. This function takes an optional argument label</p>
                <h3>Syntax</h3>
                <pre class="syntax">console.count();</pre>
                <h3>Example</h3>
                <pre>
function login(name) {
  console.count(name + ' logged in');
}

login("Bob");
login("Mike");
login("Bob");
login("Bob");
                </pre>
                <div class="bar">
                    <button onclick="testCount()">Test in your browser</button>
                </div>
                <h3>Output</h3>
                <div class="output">
                    <span class="blue">Bob logged in: 1</span><br>
                    <span class="blue">Mike logged in: 1</span><br>
                    <span class="blue">Bob logged in: 2</span><br>
                    <span class="blue">Bob logged in: 3</span>
                </div>
            </article>

            <article class="grid-item">
                <h2 class="title">console time methods</h2>

            </article>
        </main>
        <footer>
           Copyright Jan Nahody 2017
        </footer>

        <script src="main.js"></script>
    </body>
</html>
